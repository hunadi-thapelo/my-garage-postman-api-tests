{
	"info": {
		"_postman_id": "276bcb66-ef60-4a5a-88c0-8fe06778a803",
		"name": "My Garage API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20112794"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "register user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// pm.test(\"Registration with an existing email\", () => {",
									"//     var jsonData = pm.response.json();",
									"//     pm.expect(jsonData.message).to.eql(\"Email is already registered\");",
									"// });",
									"",
									"const response = pm.response.json();",
									"//console.log(response);",
									"console.log(response.email);",
									"pm.collectionVariables.set(\"registeredEmail\", response.email); // Store the email in a collection variable for later use",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// // Save the generated random password to an environment or collection variable",
									"// let generatedPassword = pm.variables.replaceIn('{{$randomPassword}}');",
									"// pm.collectionVariables.set(\"generatedPassword\", generatedPassword);",
									"",
									"// Save the generated random email to an environment or collection variable",
									"// let generatedEmail = pm.variables.replaceIn('{{$randomEmail}}');",
									"// pm.collectionVariables.set(\"generatedEmail\", generatedEmail);",
									"",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"password\": \"myPassW0rd123\",\n  \"email\": \"{{$randomEmail}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"password\": \"myPassW0rd123\",\n  \"email\": \"{{registeredEmail}}\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Unhappy Paths",
			"item": [
				{
					"name": "register user with existing email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// pm.test(\"Registration with an existing email\", () => {",
									"//     var jsonData = pm.response.json();",
									"//     pm.expect(jsonData.message).to.eql(\"Email is already registered\");",
									"// });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"password\": \"\",\n  \"email\": \"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "login with invalid inputs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", () => {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"password\": \"\",\n  \"email\": \"\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							"pm.test(\"Registration with an existing email\", () => {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.message).to.eql(\"Email is already registered\");",
							"});"
						]
					}
				}
			]
		},
		{
			"name": "create vehicle",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"make\": \"Suzuki\",\n  \"model\": \"Swift\",\n  \"year\": 2022,\n  \"registrationNumber\": \"NN 990 CC\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/vehicles",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"vehicles"
					]
				}
			},
			"response": []
		},
		{
			"name": "all vehicles",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/vehicles",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"vehicles"
					]
				}
			},
			"response": []
		},
		{
			"name": "update vehicle",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"make\": \"Honda\",\n  \"model\": \"CR-V\",\n  \"year\": 2025,\n  \"registrationNumber\": \"GV 018 CC\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/vehicles/2",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"vehicles",
						"2"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "an existing vehicle",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/vehicles/3",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"vehicles",
						"3"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "ADD LOCAL HOST URL",
			"type": "string"
		},
		{
			"key": "accessToken",
			"value": "ADD YOUR ACCESS TOKEN",
			"type": "string"
		},
		{
			"key": "registeredEmail",
			"value": ""
		}
	]
}